name: Java CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag sanmartial/team38:petshop
      

      - name: Log In Docker
        run: docker login -u ${{ secrets.LOGIN_DOCKER }} -p ${{ secrets.PASSWORD_DOCKER }}

      - name: Push the Docker image to Docker Hub
        run: docker push sanmartial/team38:petshop

  deploy:
    name: Deploy to Amazon ECS
    environment: production

    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: public.ecr.aws/d6h0o9z3/petshop-api
      ECS_SERVICE: arn:aws:ecs:us-east-1:211125647916:service/PetShopClasterV2/PetShopServiceV1
      ECS_CLUSTER: arn:aws:ecs:us-east-1:211125647916:cluster/PetShopClasterV2
      ECS_TASK_DEFINITION: ./petshop_taskV1-revision1.json
      CONTAINER_NAME: petshopContainer

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Docker image to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-container-image@v1
        with:
          image: sanmartial/team38:petshop
          container-name: ${{ env.CONTAINER_NAME }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
